{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useEffect","Blockly","Blocks","init","this","jsonInit","inject","toolbox","document","getElementById","className","id","style","height","width","display","name","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yMAAe,I,4BCmDAA,MA9Cf,WAwBI,OAvBAC,IAAMC,WAAU,WACZC,IAAQC,OAAR,cAAkC,CAC9BC,KAAM,WACFC,KAAKC,SAAS,CACV,SAAY,wBACZ,MAAS,CACL,CACI,KAAQ,cACR,KAAQ,QACR,MAAS,WAGjB,OAAU,SACV,OAAU,IACV,QAAW,kDACX,QAAW,6DAIPJ,IAAQK,OAAO,aAAc,CACzCC,QAASC,SAASC,eAAe,gBAIrC,sBAAKC,UAAU,MAAf,UACI,8CACA,qBAAKC,GAAG,aAAaC,MAAO,CAACC,OAAQ,QAASC,MAAO,WACrD,sBAAKH,GAAG,UAAUC,MAAO,CAACG,QAAS,QAAnC,UACI,2BAAUC,KAAK,2BAAf,UACI,uBAAOC,KAAK,gBACZ,uBAAOA,KAAK,wBACZ,uBAAOA,KAAK,kBACZ,uBAAOA,KAAK,gBACZ,uBAAOA,KAAK,oBACZ,uBAAOA,KAAK,SACZ,uBAAOA,KAAK,kBAEhB,0BAAUD,KAAK,uCAAf,SACI,uBAAOC,KAAK,2BChCjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BS,M","file":"static/js/main.9629705f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Blockly from 'blockly';\n\nfunction App() {\n    React.useEffect(() => {\n        Blockly.Blocks['string_length'] = {\n            init: function() {\n                this.jsonInit({\n                    \"message0\": '%1 の長さ',\n                    \"args0\": [\n                        {\n                            \"type\": \"input_value\",\n                            \"name\": \"VALUE\",\n                            \"check\": \"String\"\n                        }\n                    ],\n                    \"output\": \"Number\",\n                    \"colour\": 160,\n                    \"tooltip\": \"Returns number of letters in the provided text.\",\n                    \"helpUrl\": \"http://www.w3schools.com/jsref/jsref_length_string.asp\"\n                });\n            }\n        };\n        let workspace = Blockly.inject('blocklyDiv', {\n            toolbox: document.getElementById('toolbox')\n        });\n    });\n    return (\n        <div className=\"App\">\n            <h1>blockly demo</h1>\n            <div id=\"blocklyDiv\" style={{height: \"480px\", width: \"600px\"}}></div>\n            <xml id=\"toolbox\" style={{display: \"none\"}}>\n                <category name=\"既存部品\">\n                    <block type=\"controls_if\"></block>\n                    <block type=\"controls_repeat_ext\"></block>\n                    <block type=\"logic_compare\"></block>\n                    <block type=\"math_number\"></block>\n                    <block type=\"math_arithmetic\"></block>\n                    <block type=\"text\"></block>\n                    <block type=\"text_print\"></block>\n                </category>\n                <category name=\"カスタム部品\">\n                    <block type=\"string_length\"></block>\n                </category>\n            </xml>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}